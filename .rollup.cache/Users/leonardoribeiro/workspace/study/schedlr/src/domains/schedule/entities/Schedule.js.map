{"version":3,"file":"Schedule.js","sourceRoot":"","sources":["Schedule.ts"],"names":[],"mappings":";AAEA,OAAO,KAAK,MAAM,aAAa,CAAC;AAGhC;IAIE,kBAAY,MAA6B;QAFjC,iBAAY,GAA+B,IAAI,GAAG,EAAE,CAAA;QAG1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IACD,wCAAqB,GAArB,UAAsB,WAAwB;QAC5C,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;QAC3C,IAAM,kBAAkB,GAAkB,EAAE,CAAA;QAE5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;YAC9D,OAAO,EAAE,CAAA;QACX,CAAC;QAED,IAAI,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC/K,IAAM,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAEzK,IAAM,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3K,IAAM,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAE1K,IAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAA;QAC7E,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC9B,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD,CAAC,CAAA;QAEF,OAAO,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YACrC,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC;gBAC/E,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YACtC,CAAC;YACD,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACzC,CAAC;QAED,OAAO,kBAAkB;aACtB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;aAC5D,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;aAC/D,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAAA;IACtC,CAAC;IAED,iCAAc,GAAd,UAAe,WAAwB;QACrC,IAAI,WAAW,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;QACjD,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,kCAC7D,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9E,WAAW;kBACX,CAAA;IACJ,CAAC;IAEO,uCAAoB,GAA5B,UAA6B,kBAAiC,EAAE,QAAyB;QAAzF,iBAKC;QAJC,OAAO,UAAC,IAAiB;YACvB,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAA;YAC3E,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAA,WAAW,IAAI,OAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAA/E,CAA+E,CAAC,CAAA;QAC3H,CAAC,CAAA;IACH,CAAC;IAEO,oCAAiB,GAAzB,UAA0B,kBAAiC,EAAE,QAAyB;QAAtF,iBAUC;QATC,OAAO,UAAC,IAAiB;YACvB,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACvK,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAEjK,IAAM,SAAS,GAAG,IAAI,CAAA;YACtB,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAElC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QACvI,CAAC,CAAA;IACH,CAAC;IACH,eAAC;AAAD,CAAC,AArED,IAqEC","sourcesContent":["import { ScheduleConfiguration } from \"@/domains/schedule/entities/ScheduleConfiguration\";\nimport { Appointment } from \"@/domains/schedule/entities/Appointment\";\nimport dayjs from \"@/lib/dayjs\";\nimport plugin from \"dayjs/plugin/utc\";\n\nexport class Schedule {\n  private config: ScheduleConfiguration\n  private appointments: Map<string, Appointment[]> = new Map()\n\n  constructor(config: ScheduleConfiguration) {\n    this.config = config\n  }\n  getAvailableTimeSlots(appointment: Appointment) {\n    const currentDate = dayjs(appointment.date)\n    const availableTimeSlots: dayjs.Dayjs[] = []\n\n    if (!this.config.getWorkingDays().includes(currentDate.day())) {\n      return []\n    }\n\n    let currentTime = currentDate.set('hour', parseInt(this.config.getWorkingHoursStart().split(':')[0])).set('minute', parseInt(this.config.getWorkingHoursStart().split(':')[1]))\n    const endTime = currentDate.set('hour', parseInt(this.config.getWorkingHoursEnd().split(':')[0])).set('minute', parseInt(this.config.getWorkingHoursEnd().split(':')[1]))\n\n    const breakTime = currentDate.set('hour', parseInt(this.config.getBreakHoursStart().split(':')[0])).set('minute', parseInt(this.config.getBreakHoursStart().split(':')[1]))\n    const endBreakTime = currentDate.set('hour', parseInt(this.config.getBreakHoursEnd().split(':')[0])).set('minute', parseInt(this.config.getBreakHoursEnd().split(':')[1]))\n\n    const scheduleToday = this.appointments.get(currentDate.format('YYYY-MM-DD'))\n    const duration = dayjs.duration({\n      hours: Number(appointment.duration.split(':')[0]),\n      minutes: Number(appointment.duration.split(':')[1])\n    })\n\n    while (currentTime.isBefore(endTime)) {\n      if (currentTime.isBefore(breakTime) || currentTime.isSameOrAfter(endBreakTime)) {\n        availableTimeSlots.push(currentTime)\n      }\n      currentTime = currentTime.add(duration)\n    }\n\n    return availableTimeSlots\n      .filter(this.filterByBreakTime(availableTimeSlots, duration))\n      .filter(this.filterByAppointments(availableTimeSlots, duration))\n      .map(time => time.format('HH:mm'))\n  }\n\n  addAppointment(appointment: Appointment) {\n    if (appointment.endTime === undefined) {\n      throw new Error('Appointment time is required')\n    }\n\n    this.appointments.set(dayjs(appointment.date).format('YYYY-MM-DD'), [\n      ...(this.appointments.get(dayjs(appointment.date).format('YYYY-MM-DD')) || []),\n      appointment\n    ])\n  }\n\n  private filterByAppointments(availableTimeSlots: dayjs.Dayjs[], duration: plugin.Duration) {\n    return (time: dayjs.Dayjs) => {\n      const appointments = this.appointments.get(time.format('YYYY-MM-DD')) || []\n      return !appointments.some(appointment => time.isBetween(dayjs(appointment.date), dayjs(appointment.endTime), null, '[)'))\n    }\n  }\n\n  private filterByBreakTime(availableTimeSlots: dayjs.Dayjs[], duration: plugin.Duration) {\n    return (time: dayjs.Dayjs) => {\n      const breakTimeStart = time.set('hours', Number(this.config.getBreakHoursStart().split(':')[0])).set('minutes', Number(this.config.getBreakHoursStart().split(':')[1]))\n      const endTimeStart = time.set('hours', Number(this.config.getBreakHoursEnd().split(':')[0])).set('minutes', Number(this.config.getBreakHoursEnd().split(':')[1]))\n\n      const timeStart = time\n      const timeEnd = time.add(duration)\n\n      return !timeStart.isBetween(breakTimeStart, endTimeStart, null, '[)') && !timeEnd.isBetween(breakTimeStart, endTimeStart, null, '(]')\n    }\n  }\n}\n"]}